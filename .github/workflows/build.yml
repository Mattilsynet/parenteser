name: Build and deploy Parenteser

on:
  workflow_dispatch: {}
  push:
    branches:
      - main

env:
  BOT_ICON: ":parenteser:"
  BOT_NAME: "Bananbloggen"

permissions:
  id-token: write
  contents: read

concurrency: ci

jobs:
  configure:
    runs-on: ubuntu-latest
    outputs:
      sha: ${{ steps.sha.outputs.sha }}
      slack-message: ${{ steps.slack.outputs.message-id }}
    steps:
      - uses: actions/checkout@v3
      - name: Get deployment sha
        id: sha
        run: echo "sha=$(cut -c 1-10 <<< ${{ github.sha }})" >> $GITHUB_OUTPUT
      - name: Notify build start
        id: slack
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATION_TOKEN }}
        uses: Mattilsynet/slacker-action@main
        with:
          channel-id: C06192XRMNW
          text: ":pear: Starter …"
          bot-icon: "${{ env.BOT_ICON }}"
          bot-name: "${{ env.BOT_NAME }}"

  test:
    runs-on: ubuntu-latest

    needs:
      - configure

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@13.4
        with:
          cli: 1.11.1.1413
      - name: Cache maven build deps
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-clojure-test-${{ hashFiles('deps.edn') }}
          restore-keys: |
            ${{ runner.os }}-clojure-test
      - name: Cache gitlibs
        uses: actions/cache@v3
        with:
          path: ~/.gitlibs
          key: ${{ runner.os }}-gitlibs-test-${{ hashFiles('deps.edn') }}
          restore-keys: |
            ${{ runner.os }}-gitlibs-test
      - name: Notify testing
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATION_TOKEN }}
        uses: Mattilsynet/slacker-action@main
        with:
          channel-id: C06192XRMNW
          message-id: ${{ needs.configure.outputs.slack-message }}
          text: ":broccoli: Kjører tester …"
          bot-icon: "${{ env.BOT_ICON }}"
          bot-name: "${{ env.BOT_NAME }}"
      - name: Test
        run: make test

  build:
    runs-on: ubuntu-latest

    needs:
      - configure

    steps:
      - name: Notify build
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATION_TOKEN }}
        uses: Mattilsynet/slacker-action@main
        with:
          channel-id: C06192XRMNW
          message-id: ${{ needs.configure.outputs.slack-message }}
          text: ":kiwifruit: Bygger docker image …"
          bot-icon: "${{ env.BOT_ICON }}"
          bot-name: "${{ env.BOT_NAME }}"
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@13.4
        with:
          cli: 1.11.1.1155
      - name: Cache maven build deps
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-clojure-build-${{ hashFiles('deps.edn') }}
          restore-keys: |
            ${{ runner.os }}-clojure-build
      - name: Cache gitlibs
        uses: actions/cache@v3
        with:
          path: ~/.gitlibs
          key: ${{ runner.os }}-gitlibs-build-${{ hashFiles('deps.edn') }}
          restore-keys: |
            ${{ runner.os }}-gitlibs-build
      - name: Build docker image
        run: make docker
      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          token_format: access_token
          create_credentials_file: true
          workload_identity_provider: projects/799884623953/locations/global/workloadIdentityPools/gh-actions/providers/github
          service_account: artifacts-wi-sa-github-actions@artifacts-352708.iam.gserviceaccount.com
      - name: Log in to Google Artifact Registry (GAR)
        uses: docker/login-action@v1
        with:
          registry: europe-north1-docker.pkg.dev/artifacts-352708
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
      - name: Notify publish
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATION_TOKEN }}
        uses: Mattilsynet/slacker-action@main
        with:
          channel-id: C06192XRMNW
          message-id: ${{ needs.configure.outputs.slack-message }}
          text: ":strawberry: Publiserer docker image …"
          bot-icon: "${{ env.BOT_ICON }}"
          bot-name: "${{ env.BOT_NAME }}"
      - name: Publish docker image
        run: make publish

  deploy:
    runs-on: ubuntu-latest
    needs:
      - configure
      - build

    name: Deployer vha Cloud Run
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          token_format: access_token
          create_credentials_file: true
          workload_identity_provider: projects/555560380627/locations/global/workloadIdentityPools/gh-actions/providers/github
          service_account: cloudrun-wi-sa-github-actions@parenteser-b480.iam.gserviceaccount.com
      - name: Notify publish
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATION_TOKEN }}
        uses: Mattilsynet/slacker-action@main
        with:
          channel-id: C06192XRMNW
          message-id: ${{ needs.configure.outputs.slack-message }}
          text: ":blueberries: Sjøsetter herligheta …"
          bot-icon: "${{ env.BOT_ICON }}"
          bot-name: "${{ env.BOT_NAME }}"
      - name: Deploying
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          project_id: parenteser-b480
          region: europe-north1
          service: parenteser
          image: europe-north1-docker.pkg.dev/artifacts-352708/mat/parenteser:${{ needs.configure.outputs.sha }}

  notify-success:
    runs-on: ubuntu-latest

    needs:
      - configure
      - test
      - deploy

    if: success()

    steps:
      - name: Notify build & push success
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATION_TOKEN }}
        uses: Mattilsynet/slacker-action@main
        with:
          channel-id: C06192XRMNW
          message-id: ${{ needs.configure.outputs.slack-message }}
          text: ":banana: Ferdig og godt fornøyd"
          bot-icon: "${{ env.BOT_ICON }}"
          bot-name: "${{ env.BOT_NAME }}"

  notify-failure:
    runs-on: ubuntu-latest

    needs:
      - configure
      - test
      - deploy

    if: failure()

    steps:
      - name: Notify failure
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATION_TOKEN }}
        uses: Mattilsynet/slacker-action@main
        with:
          channel-id: C06192XRMNW
          message-id: ${{ needs.configure.outputs.slack-message }}
          text: ":mushroom: Trøbbel i tårnet!"
          bot-icon: "${{ env.BOT_ICON }}"
          bot-name: "${{ env.BOT_NAME }}"
